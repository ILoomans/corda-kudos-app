import static org.gradle.api.JavaVersion.VERSION_11

plugins {
    id 'org.jetbrains.kotlin.jvm'

    // (1)
    id 'net.corda.plugins.cordapp-cpb'
}

group 'org.example'
version '1.0-SNAPSHOT'

def javaVersion = VERSION_11

// (2)
cordapp {
    targetPlatformVersion platformVersion as Integer
    minimumPlatformVersion platformVersion as Integer
    workflow {
        name "ModuleNameHere"
        versionId 1
        vendor "VendorNameHere"
    }
}


// (3)
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        allWarningsAsErrors = true
        languageVersion = '1.6'
        apiVersion = '1.6'
        jvmTarget = javaVersion
        javaParameters = true   // Useful for reflection.
        freeCompilerArgs += [
                "-java-parameters",
                "-Xjvm-default=all"
        ]
    }
}

// (4)
repositories {
    // TODO: you really need to use the cache, otherwise no complaining when upstream repos throttle us!
    // It would make sense to follow the template!

    //needed for kotlin osgi bundles generated by us
    maven {
        url = "$artifactoryContextUrl/corda-dependencies"
    }
    //needed for C5 binaries
    maven {
        url = "$artifactoryContextUrl/corda-os-maven"
        credentials {
            username = findProperty('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
            password = findProperty('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
        }
    }

    mavenCentral()
}

// (5)
dependencies {
    // We need to use kotlin stdlib built as an OSGi Bundle
    cordaProvided 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    cordaProvided platform("net.corda:corda-api:$cordaApiVersion")
    cordaProvided 'net.corda:corda-base'
    cordaProvided 'net.corda:corda-application'
    cordaProvided 'org.slf4j:slf4j-api'
}

test {
    useJUnitPlatform()
}
