import static org.gradle.api.JavaVersion.VERSION_11

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'net.corda.cordapp.cordapp-configuration'
    id 'org.jetbrains.kotlin.plugin.jpa'
    id 'java'
    id 'maven-publish'
    id 'csde'
    id 'net.corda.plugins.cordapp-cpb2'
}

allprojects {
    group 'com.r3.developers.csdetemplate'
    version '1.0-SNAPSHOT'

    def javaVersion = VERSION_11

    // Declare the set of Kotlin compiler options we need to build a CorDapp.
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            allWarningsAsErrors = false

            // Specify the version of Kotlin that we are that we will be developing.
            languageVersion = '1.7'
            // Specify the Kotlin libraries that code is compatible with
            apiVersion = '1.7'
            // Note that we Need to use a version of Kotlin that will be compatible with the Corda API.
            // Currently that is developed in Kotlin 1.7 so picking the same version ensures compatibility with that.

            // Specify the version of Java to target.
            jvmTarget = javaVersion

            // Needed for reflection to work correctly.
            javaParameters = true

            // -Xjvm-default determines how Kotlin supports default methods.
            // JetBrains currently recommends developers use -Xjvm-default=all
            // https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/
            freeCompilerArgs += [
                    "-Xjvm-default=all"
            ]
        }
    }

    repositories {
        // All dependencies are held in Maven Central
        mavenCentral()
        mavenLocal()
/*
Required by:
    project : > net.corda:corda-simulator-api:5.0.0.0-Gecko1.0 > net.corda:corda-simulator-runtime:5.0.0.0-Gecko1.0 > net.corda:corda-crypto-serialization-impl:5.0.0.0-Gecko1.0 > net.corda:corda-cipher-suite:5.0.0.0-Gecko1.0
    project : > net.corda:corda-simulator-api:5.0.0.0-Gecko1.0 > net.corda:corda-simulator-runtime:5.0.0.0-Gecko1.0 > net.corda:corda-crypto-serialization-impl:5.0.0.0-Gecko1.0 > net.corda:corda-crypto-core:5.0.0.0-Gecko1.0

use to download from

 https://software.r3.com/artifactory/corda-os-maven/net/corda/corda-crypto-utils/5.0.0.0-Gecko1.0/corda-crypto-utils-5.0.0.0-Gecko1.0.pom, took 1 s 25 ms (2.74 kB)
 */
        maven{
            url ="$artifactoryContextUrl/"
        }

        maven {
            url = "$artifactoryContextUrl/ui/native/corda-os-maven"
            credentials {
                username = findProperty('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = findProperty('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }

        maven {
            url = "$artifactoryContextUrl/corda-dependencies"
        }
        maven {
            url = "$artifactoryContextUrl/corda-os-maven"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = findProperty('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password =  findProperty('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

}

//dependencies {
//    cordaProvided 'org.jetbrains.kotlin:kotlin-osgi-bundle'
//
//    // Declare a "platform" so that we use the correct set of dependency versions for the version of the
//    // Corda API specified.
//    cordaProvided platform("net.corda:corda-api:$cordaApiVersion")
//
////    cordaProvided ("net.corda:corda-crypto-serialization-impl:$cordaApiVersion")
//
//    // Dependencies Required By Test Tooling
////    testImplementation "net.corda:corda-simulator-api:$simulatorVersion"
////    testRuntimeOnly "net.corda:corda-simulator-runtime:$simulatorVersion"
//
//    cordaProvided("net.corda:corda-simulator-api:$simulatorVersion")
//    cordaProvided("net.corda:corda-simulator-runtime:$simulatorVersion")
//}

publishing {
    publications {
            maven(MavenPublication) {
                artifactId "corda-CSDE-kotlin-sample"
                groupId project.group
                artifact jar
         }
    }
}
